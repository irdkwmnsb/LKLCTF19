#!/usr/bin/env python3

import base64
import os
import sys
import time
from threading import Thread
from queue import Queue, Full

import tornado.web
import tornado.ioloop
from selenium import webdriver
from loguru import logger


queue = Queue()


class MainHandler(tornado.web.RequestHandler):
    def post(self):
        global queue
        logger.info('Request')
        try:
            # Если можем добавить элемент в очередь, то зашибись
            queue.put_nowait(self.request.body)
        except Full:
            # Если не можем, то...
            # ¯\_(ツ)_/¯
            logger.warning('Queue is full, dropping request')
            pass


@logger.catch
def check_item(session_id, ff):
    global queue
    html = queue.get().decode()
    logger.info('Processing HTML')
    ff.get(
        'data:text/html;charset=utf-8,'
        + html
        + '<!-- Generated by smart_bot, session_id = {} -->'.format(session_id)
    )
    time.sleep(5.0)
    ff.get('about:blank')
    logger.info('Done')
    

def check_loop():
    # Гарантирован ровно один инстанс firefox на протяжении всего времени
    logger.info('Starting headless firefox')
    session_id = os.getenv('SERVICE_SMART_BOT_SESSION_ID', '<error>')
    if session_id == '<error>':
        logger.error('Please specify session id via environment variable. Continuing anyway')
    with webdriver.Firefox() as ff:
        logger.info('Firefox started')
        while True:
            check_item(session_id, ff)


def main():
    logger.info('Starting HTTP listener on 0.0.0.0:6666')
    app = tornado.web.Application([
        ('/', MainHandler),
    ])
    app.listen(6666)
    Thread(target=check_loop).start()
    tornado.ioloop.IOLoop.current().start()


if __name__ == '__main__':
    main()
